#!/bin/bash

set +e

############### bootstrap

# This script MUST be executed by `pi` user
FIRSTUSER="$(getent passwd 1000 | cut -d: -f1)"
if [[ $(whoami) != "${FIRSTUSER}" ]] ; then
   dotpi echo_error "This script MUST be executed by pi user (or first user)"
   exit 1
fi

DOTPI_ROOT="${DOTPI_ROOT:-/opt/dotpi}"
source "${DOTPI_ROOT}/share/dotpi_init.bash"

############### system packages via apt

# in case dpkg was interrupted
sudo dpkg --configure -a

dotpi echo_info "Uninstall apt packages: ${dotpi_apt_uninstall[@]}"
sudo dotpi apt_get purge "${dotpi_apt_uninstall[@]}"

sudo dotpi apt_get clean
sudo dotpi apt_get autoremove -y

dotpi echo_info "Update and dist-upgrade"
sudo dotpi apt_get update
sudo dotpi apt_get dist-upgrade

dotpi echo_info "Install apt packages: ${dotpi_apt_install[@]}"
sudo dotpi apt_get install "${dotpi_apt_install[@]}"


############### node.js

dotpi echo_info "Install Node.js"

word_size="$(dotpi file_word_size "$(which file)" )"
if [[ $word_size == "32" ]] ; then
   node_arch=armv7l
else
   node_arch=arm64
fi

# install n for sudo usage
N_PREFIX="${DOTPI_ROOT}/share/n"
sudo mkdir -p "$N_PREFIX"
curl -L https://bit.ly/n-install -o /tmp/n-install
sudo N_PREFIX="${DOTPI_ROOT}/share/n" bash /tmp/n-install -y -a "$node_arch" "$dotpi_node_version"
if [[ $? ]] ; then
   rm /tmp/n-install
   sudo bash -c "cat >> '/root/.bashrc' << EOF

# dotpi: force the usage of -a for correct architecture
# (n relies on uname, which tells about the kernel, not the executables)

alias n='n -a ${node_arch}'

EOF
"

fi

source="${N_PREFIX}/bin"
destination="/usr/bin"
executables=(
   corepack
   n
   node
   npm
   npx
)
for executable in "${executables[@]}" ; do
    sudo ln -s -f "${source}/${executable}" "${destination}/${executable}"
done

############## services

# allow to run user services without login
sudo loginctl enable-linger "$FIRSTUSER"

############# avahi (multicast DNS, bonjour)

# restart when hostname is not resolved by mDNS
sudo dotpi service_install "${DOTPI_ROOT}/share/dotpi_avahi_monitor/dotpi_avahi_monitor.service"

############## pipewire (and jackd compatibility)
# over-ride calls to jackd
# copy with prefix 0- to ensure it is loaded before default aarch64-linux-gnu.conf
for f in /usr/share/doc/pipewire/examples/ld.so.conf.d/pipewire-jack-*.conf ; do
  source_basename="$(basename "$f")"
  destination_basename="0-${source_basename}"
  sudo cp "$f" "/etc/ld.so.conf.d/${destination_basename}"
done
sudo ldconfig

# ower-rides
source_path="${DOTPI_ROOT}/share/wireplumber"
destination_path='/usr/share/wireplumber'
if [ -r "$source_path" ] ; then
   sudo mkdir -p "$destination_path"
   tar c -C "$source_path" '.' | sudo tar x -C "$destination_path"
fi

systemctl --user enable --now wireplumber.service

############## dotpi-manager

if [[ "$dotpi_manager_install" == "yes" ]]; then (
  destination="${DOTPI_ROOT}/share/dotpi-manager"
  sudo mkdir -p -- "$destination" || {
    dotpi echo_error "dotpi-manager: could not create directory: ${destination}"
    return 1
  }
  cd -- "$destination" || {
    dotpi echo_error "dotpi-manager: could not change to runtime: ${destination}"
    return 1
  }

  destination_runtime="${destination}/runtime"
  sudo rm -rf -- "$destination_runtime"
  sudo git clone --depth=1 https://github.com/ircam-ismm/dotpi-manager.git "$destination_runtime" || {
    dotpi echo_error "dotpi-manager: could not clone repository"
    return 1
  }
  # bootstrap-install
  sudo bash -c "\
    source '${DOTPI_ROOT}/share/dotpi_init.bash' && \
    source runtime/dotpi/dotpi-manager.bash && \
    dotpi_manager_update \
  "
) fi

############## dotpi-led

if [[ "$dotpi_led_install" == "yes" ]]; then (
  destination="${DOTPI_ROOT}/share/dotpi-led"
  sudo mkdir -p -- "$destination" || {
    dotpi echo_error "dotpi-led: could not create directory: ${destination}"
    return 1
  }
  cd -- "$destination" || {
    dotpi echo_error "dotpi-led: could not change to runtime: ${destination}"
    return 1
  }

  destination_runtime="${destination}/runtime"
  sudo rm -rf -- "$destination_runtime"
  sudo git clone --depth=1 https://github.com/ircam-ismm/dotpi-led.git "$destination_runtime" || {
    dotpi echo_error "dotpi-led: could not clone repository"
    return 1
  }
  # bootstrap-install
  sudo bash -c "\
    source '${DOTPI_ROOT}/share/dotpi_init.bash' && \
    source runtime/dotpi/dotpi-led.bash && \
    dotpi_led_update \
  "
) fi

############## finalisation

dotpi echo_info "System prepared. Rebooting..."

sudo reboot

